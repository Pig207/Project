#Dean Woelfle
#12/16/2020
#Lab 4
#Project Euler Problems

#Lets the user select a problem
Problem = input("Type a number to choose a problem. Possible problems: 1 - 3. ")
print("\n")

#problem 1
if (Problem == '1'):

    #reads prompt of problem
    print("If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. \nFind the sum of all the multiples of 3 or 5 below 1000.\n")
    #total
    sum = 0
    #runs through every number from 1 to 1000
    for num in range(1, 1000):

        #sees if it is divisible by 3
        if (num % 3 == 0):
            #if so, adds it to total
            sum += num 
        #sees if it is divisible by 3
        elif (num % 5 == 0):
            #if so, adds it to total
            sum += num 
    #turns total into a string
    sum = str(sum)
    #prints out answer (total)
    print("The sum of all the multiples of 3 or 5 below 1000 is " + sum)

#problem 2
elif (Problem == '2'):

    #reads prompt of problem
    print("Each new term in the Fibonacci sequence is generated by adding the previous two terms.\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n")
    #List for Fibonacci sequence
    FibList = [1,2]
    #total
    sum = 0
    #makes sure sequence doesn't go above four million
    while ((FibList[-1]+FibList[-2]) < 4000000):
        #adds most recent to second most recent value in sequence to get newest value
        FibList.append(FibList[-1]+FibList[-2])

    #runs through all values in sequence and sees if they are divisible by 2 (even)
    for num in FibList:
        if (num % 2 == 0):
            #if so, adds it to total
            sum += num
    #turns total into a string
    sum = str(sum)
    #prints out answer (total)
    print("The sum of all the even valued terms less than four million in the Fibonacci sequence is " + sum)

#problem 3
elif (Problem == '3'):

    #reads prompt of problem
    print("What is the largest prime factor of the number 600851475143?")

    #list for calculated prime factors
    primes = []

    #goes through a list of numbers (the reason I chose 10,000 as a max was to reduce computation time. Our final answer is less than 10,000 so this works. This number can be increased, but raises the computation time)
    for num in range(1, 10000):
        #sees if the number is even a factor
        if (600851475143 % num == 0):
            prime = True
            #sees if the number is prime
            for numm in range(1,num):
                if (num % numm == 0 and numm != 1 and numm != num):
                    prime = False
            #if it is prime, adds it to the list of primes
            if (prime == True):
                primes.append(num)
                print(num)
    #selects and prints the most recent (so the largest) prime
    primee = str(primes[-1])
    print("\nThe largest prime factor of the number 600851475143 is " + primee)

#problem failed to enter
else:
    print("Error: You didn't input a problem correctly")
